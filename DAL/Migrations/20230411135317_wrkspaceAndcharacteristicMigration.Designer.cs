// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DeskMateContext))]
    [Migration("20230411135317_wrkspaceAndcharacteristicMigration")]
    partial class wrkspaceAndcharacteristicMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BLL.DTOs.CharacteristicDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("characteristic");
                });

            modelBuilder.Entity("BLL.DTOs.CompanyDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("BLL.DTOs.FloorDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("floor");
                });

            modelBuilder.Entity("BLL.DTOs.LocationDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("location");
                });

            modelBuilder.Entity("BLL.DTOs.PermissionDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("permission");
                });

            modelBuilder.Entity("BLL.DTOs.ReservationDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("reservation");
                });

            modelBuilder.Entity("BLL.DTOs.RoleDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("BLL.DTOs.RoomDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FloorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("room");
                });

            modelBuilder.Entity("BLL.DTOs.UserDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("BLL.DTOs.WorkspaceCharacteristicsDTO", b =>
                {
                    b.Property<Guid>("WorkspaceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CharacteristicId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("WorkspaceId", "CharacteristicId");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("workspaceCharacteristic");
                });

            modelBuilder.Entity("BLL.DTOs.WorkspaceDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("workspace");
                });

            modelBuilder.Entity("BLL.DTOs.FloorDTO", b =>
                {
                    b.HasOne("BLL.DTOs.LocationDTO", "locationDTO")
                        .WithMany("floorDTO")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("locationDTO");
                });

            modelBuilder.Entity("BLL.DTOs.LocationDTO", b =>
                {
                    b.HasOne("BLL.DTOs.CompanyDTO", "companyDTO")
                        .WithMany("locationDTOList")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companyDTO");
                });

            modelBuilder.Entity("BLL.DTOs.PermissionDTO", b =>
                {
                    b.HasOne("BLL.DTOs.RoleDTO", "roleDTO")
                        .WithMany("permissionDTO")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roleDTO");
                });

            modelBuilder.Entity("BLL.DTOs.ReservationDTO", b =>
                {
                    b.HasOne("BLL.DTOs.UserDTO", "userDTO")
                        .WithMany("reservationDTOs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLL.DTOs.WorkspaceDTO", "WorkspaceDto")
                        .WithMany("reservationDTOs")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkspaceDto");

                    b.Navigation("userDTO");
                });

            modelBuilder.Entity("BLL.DTOs.RoomDTO", b =>
                {
                    b.HasOne("BLL.DTOs.FloorDTO", "floorDTO")
                        .WithMany("roomDTO")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("floorDTO");
                });

            modelBuilder.Entity("BLL.DTOs.UserDTO", b =>
                {
                    b.HasOne("BLL.DTOs.CompanyDTO", "companyDTO")
                        .WithMany("userDTO")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLL.DTOs.RoleDTO", "roleDTO")
                        .WithMany("userDTO")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companyDTO");

                    b.Navigation("roleDTO");
                });

            modelBuilder.Entity("BLL.DTOs.WorkspaceCharacteristicsDTO", b =>
                {
                    b.HasOne("BLL.DTOs.CharacteristicDTO", "characteristicDTO")
                        .WithMany("WorkspaceCharacteristicsDtos")
                        .HasForeignKey("CharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BLL.DTOs.WorkspaceDTO", "WorkspaceDTO")
                        .WithMany("workspaceCharacteristicsDTOs")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkspaceDTO");

                    b.Navigation("characteristicDTO");
                });

            modelBuilder.Entity("BLL.DTOs.WorkspaceDTO", b =>
                {
                    b.HasOne("BLL.DTOs.RoomDTO", "roomDTO")
                        .WithMany("WorkspaceDtos")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roomDTO");
                });

            modelBuilder.Entity("BLL.DTOs.CharacteristicDTO", b =>
                {
                    b.Navigation("WorkspaceCharacteristicsDtos");
                });

            modelBuilder.Entity("BLL.DTOs.CompanyDTO", b =>
                {
                    b.Navigation("locationDTOList");

                    b.Navigation("userDTO");
                });

            modelBuilder.Entity("BLL.DTOs.FloorDTO", b =>
                {
                    b.Navigation("roomDTO");
                });

            modelBuilder.Entity("BLL.DTOs.LocationDTO", b =>
                {
                    b.Navigation("floorDTO");
                });

            modelBuilder.Entity("BLL.DTOs.RoleDTO", b =>
                {
                    b.Navigation("permissionDTO");

                    b.Navigation("userDTO");
                });

            modelBuilder.Entity("BLL.DTOs.RoomDTO", b =>
                {
                    b.Navigation("WorkspaceDtos");
                });

            modelBuilder.Entity("BLL.DTOs.UserDTO", b =>
                {
                    b.Navigation("reservationDTOs");
                });

            modelBuilder.Entity("BLL.DTOs.WorkspaceDTO", b =>
                {
                    b.Navigation("reservationDTOs");

                    b.Navigation("workspaceCharacteristicsDTOs");
                });
#pragma warning restore 612, 618
        }
    }
}
